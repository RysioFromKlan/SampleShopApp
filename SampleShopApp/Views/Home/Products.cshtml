@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label for="pageSize">Page Size:</label>
                <select id="pageSize" class="form-control">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        @if (ViewData["sessionUser"] != null)
                        {
                           @*  <text> *@
                            <th class="text-center">---</th>
                            @* </text> *@
                        }
                        <th>Title</th>
                        <th>Price</th>
                        <th>Description</th>
                        <th>Category</th>
                        <th>Image</th>
                    </tr>
                </thead>
                <tbody id="productTableBody">
                    <!-- Products will be loaded here -->
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <nav aria-label="Page navigation">
                <ul class="pagination" id="pagination">
                    <!-- Pagination links will be loaded here -->
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        let currentPage = 1;
        let totalPagesSize = null;
        let pageSize = getPageSizeFromCookie() || 5;

            function getPageSizeFromCookie() {
                return $.cookie('pageSize');
            }

            function setPageSizeToCookie(size) {
                $.cookie('pageSize', size, { expires: 7 });
            }

            function addToCart(productId) {
                $.ajax({
                    url: '/api/Cart/AddProduct',
                    method: 'POST',
                    //data: {  productId: productId },
                    data: JSON.stringify({ productId: productId}),
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        if (response === 'Success') {
                           $('[data-product-id="'+productId+'"]').css("background-color","green");
                        } else {
                            alert('Error adding product to cart.');
                        }
                    },
                    error: function (error) {
                        console.error('Error adding product to cart:', error);
                    }
                });
            }

            function loadProducts(page, size) {
                $.ajax({
                    url: `/api/Product?page=${page}&pagesize=${size}`,
                    method: 'GET',
                    success: function (data) {
                        $('#productTableBody').empty();
                        data.forEach(function (product) {
                            $('#productTableBody').append(`
                                <tr>
                                    <td>${product.id}</td>
                                    @if (ViewData["sessionUser"] != null)
                                    {
                                        <text>
                                                   <td><button class="btn btn-primary add-to-cart" onclick="addToCart(${product.id})"  data-product-id="${product.id}">To Cart</button></td>;
                                        </text>
                                    }
                                    <td>${product.title}</td>
                                    <td>${product.price}</td>
                                    <td>${product.description}</td>
                                    <td>${product.category}</td>
                                    <td><img src="${product.image}" alt="${product.title}" width="100"></td>
                                </tr>
                            `);
                        });
                    },
                    error: function (error) {
                        console.error('Error loading products:', error);
                    }
                });
                currentPage = page;
                loadPagination(totalPagesSize);
            }

            function loadPagination(totalPages) {
                $('#pagination').empty();
                for (let i = 1; i <= totalPages; i++) {
                    $('#pagination').append(`
                        <li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="#" onclick="loadProducts(${i}, ${pageSize})">${i}</a>
                        </li>
                    `);
                }
            }

            function getProductCount() {
                $.ajax({
                    url: '/api/Product/GetProductCount',
                    method: 'GET',
                    success: function (count) {
                        let totalPages = Math.ceil(count / pageSize);
                        loadProducts(currentPage, pageSize);
                        loadPagination(totalPages);
                        totalPagesSize = totalPages;
                    },
                    error: function (error) {
                        console.error('Error getting product count:', error);
                        alert('Error getting product count');
                    }
                });
            }


        $(document).ready(function () {

            $('#pageSize').change(function () {
                pageSize = $(this).val();
                setPageSizeToCookie(pageSize);
                getProductCount();
            });

            getProductCount();
        });
    </script>
}